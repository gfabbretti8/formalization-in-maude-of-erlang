

fmod FUNC{X :: TRIV, Y :: TRIV} is

sort Func{X,Y} .
op _[_,_] : Func{X,Y} X$Elt Y$Elt -> Y$Elt [prec 17] .

endfm

fmod FOLD{X :: TRIV, Y :: TRIV, Z :: TRIV} is

inc FUNC{X, Y} .

subsort X$Elt < Z$Elt .

op empty : -> Z$Elt [ctor] .
op _,_ : X$Elt Z$Elt -> Z$Elt [ctor assoc id: empty gather (e E) prec 121] .

op foldl-term : Z$Elt Y$Elt Func{X,Y} -> Y$Elt .

var H : X$Elt .
var TL : Z$Elt .
var C : Y$Elt .
var F : Func{X, Y} .

eq foldl-term(empty, C, F) = C .
eq foldl-term((H, TL), C, F) = foldl-term(TL, F[H,C], F) .



endfm


