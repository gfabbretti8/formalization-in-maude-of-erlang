




fmod FUNC{X :: TRIV, Y :: TRIV} is

sort Func{X,Y} .
op _[_,_] : Func{X,Y} X$Elt Y$Elt -> Y$Elt [prec 17] .

endfm

view Term from TRIV to META-TERM is
  sort Elt to Term .
endv

fmod FOLD{Y :: TRIV} is

inc FUNC{Term, Y} .
pr META-TERM .

op foldl-term : TermList Y$Elt Func{Term,Y} -> Y$Elt .

var H : Term .
var TL : TermList .
var C : Y$Elt .
var F : Func{Term, Y} .

eq foldl-term(empty, C, F) = C .
eq foldl-term((H, TL), C, F) = foldl-term(TL, F[H,C], F) .

endfm


