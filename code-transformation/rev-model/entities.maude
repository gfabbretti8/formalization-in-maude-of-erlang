mod SEM_ENTITIES is protecting SEM_ENTITY_WITH_KEY . including BOOL . protecting SEM_ENTITY . sorts Entities Memory PlaceHolder . subsort Entity < Entities . subsort EntityWithKey < Entities . subsort Memory < Entities . subsort PlaceHolder < Entities . op #empty-entities : -> Entities [ctor] . op @:_ : Key -> PlaceHolder [prec 10 ctor] . op _||_ : Entities Entities -> Entities [assoc comm id: #empty-entities prec 9 ctor] . op `[_;_`] : Entities PlaceHolder -> Memory [prec 40 format(sg! o g! o g! o)ctor frozen(1 2)] . op `[_`]_ : Qid Entities -> Entities [prec 7 ctor] . eq S:Subst(nil).SumProc = (nil).SumProc . eq S:Subst(! a:Chan(x:Qid). P:Proc) = !(S:Subst a:Chan)(x:Qid).[lift x:Qid S:Subst]P:Proc . eq S:Subst(P1:Proc + P2:Proc) = S:Subst P1:Proc + S:Subst P2:Proc . eq S:Subst(tau . P:Proc) = tau . S:Subst P:Proc . eq S:Subst(a:Chan < b:Chan > . P:Proc) = (S:Subst a:Chan)< S:Subst b:Chan > . S:Subst P:Proc . eq S:Subst(a:Chan(x:Qid). P:Proc) = (S:Subst a:Chan)(x:Qid).[lift x:Qid S:Subst]P:Proc . eq S:Subst([x:Qid]P:Proc) = [x:Qid][lift x:Qid S:Subst]P:Proc . eq [x:Qid]nil = (nil).SumProc . ceq (nil).SumProc + P:Proc = P:Proc if P:Proc =/=(nil).SumProc = true . ceq S:Subst(P1:Proc || P2:Proc) = S:Subst P1:Proc || S:Subst P2:Proc if P1:Proc =/=(nil).SumProc and P2:Proc =/=(nil).SumProc = true . ceq P2:Proc ||[x:Qid]P1:Proc = [x:Qid](P1:Proc ||[shift x:Qid]P2:Proc) if P1:Proc =/=(nil).SumProc and P2:Proc =/=(nil).SumProc = true . ceq [x:Qid][y:Qid]P:Proc = [y:Qid][x:Qid]P:Proc if string(y:Qid)< string(x:Qid)= true . endm 