mod SYSTEM is including BOOL . protecting META-LEVEL . protecting SEM_ENTITY_WITH_KEY . protecting CONTEXT . protecting SEM_MESSAGE . protecting SEM_PID . protecting SEM_MODENV . protecting SEM_PROCESS . sorts Memory Sys . subsort Entity < Sys . subsort EntityWithKey < Sys . subsort Memory < Entity . subsort Memory < Sys . subsort SContext < Sys . op #setup-first-proc : Sys FunName FunDefSeq GroundValues -> Sys . op #downMemory : Term -> Memory [memo] . op #empty-system : -> Sys [ctor] . op _||_ : Sys Sys -> Sys [assoc comm id: #empty-system prec 90 format(d sm! o d)ctor] . op `[_;_`] : Sys Sys -> Memory [prec 40 format(sg! o g! o g! o)ctor frozen(1 2)] . ceq #setup-first-proc(SYS:Sys,ENTRYPOINT:FunName,MOD:FunDefSeq,ARGS:Args) = pidGen(0) || < pid(0)| exp: EXSEQ:NeExpSeq,env-stack: ENV:EnvStack, mod-env: ME:ModEnv > if ME:ModEnv := #extract-functions(MOD:FunDefSeq)/\ EXSEQ:NeExpSeq := #get-function(ENTRYPOINT:FunName,ME:ModEnv)/\ ENV:EnvStack := #init-env( #get-formal-args(ENTRYPOINT:FunName,ME:ModEnv),ARGS:Args) . endm 